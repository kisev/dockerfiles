---
.docker:
  image: docker:20
  services:
    - name: docker:20-dind-rootless
    - name: multiarch/qemu-user-static:latest
      command: ["--reset", "--persistent", "yes"]
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_BUILDKIT: 1
    DOCKER_TLS_VERIFY: 1
    DOCKER_TLS_CERTDIR: /certs
    DOCKER_CERT_PATH: ${DOCKER_TLS_CERTDIR}/client
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker context create gitlab-context
    - docker context ls
    - docker buildx create --name gitlab-builder --use gitlab-context
    - docker buildx inspect --bootstrap
  script:
    - docker buildx build
      --pull
      --push
      --platform linux/amd64,linux/arm64
      ${DOCKER_EXTRA_ARGS}

.golang_minimal:
  resource_group: golang-1.${GOLANG_SELECTOR}-minimal
  variables:
    DOCKER_EXTRA_ARGS: |
      golang/minimal
      --file golang/minimal/Dockerfile
      --build-arg PARENT_TAG=${CI_COMMIT_REF_SLUG}
      --build-arg GOLANG_SELECTOR=${GOLANG_SELECTOR}
      --tag ${CI_REGISTRY_IMAGE}/golang-1.${GOLANG_SELECTOR}:${CI_COMMIT_REF_SLUG}
      --tag ${CI_REGISTRY_IMAGE}/golang-1.${GOLANG_SELECTOR}:${CI_COMMIT_REF_SLUG}-minimal
      --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/golang-1.${GOLANG_SELECTOR}-minimal-cache:${CI_COMMIT_REF_SLUG}
      --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/golang-1.${GOLANG_SELECTOR}-minimal-cache:${CI_COMMIT_REF_SLUG},mode=max
  needs:
    - job: core/build

.golang_full:
  resource_group: golang-1.${GOLANG_SELECTOR}-full
  variables:
    DOCKER_EXTRA_ARGS: |
      golang/full
      --file golang/full/Dockerfile
      --build-arg PARENT_TAG=${CI_COMMIT_REF_SLUG}
      --build-arg GOLANG_SELECTOR=${GOLANG_SELECTOR}
      --tag ${CI_REGISTRY_IMAGE}/golang-1.${GOLANG_SELECTOR}:${CI_COMMIT_REF_SLUG}-full
      --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/golang-1.${GOLANG_SELECTOR}-full-cache:${CI_COMMIT_REF_SLUG}
      --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/golang-1.${GOLANG_SELECTOR}-full-cache:${CI_COMMIT_REF_SLUG},mode=max

.nodejs_minimal:
  resource_group: nodejs-${NODEJS_SELECTOR}-minimal
  variables:
    DOCKER_EXTRA_ARGS: |
      nodejs/minimal
      --file nodejs/minimal/Dockerfile
      --build-arg PARENT_TAG=${CI_COMMIT_REF_SLUG}
      --build-arg NODEJS_SELECTOR=${NODEJS_SELECTOR}
      --tag ${CI_REGISTRY_IMAGE}/nodejs-${NODEJS_SELECTOR}:${CI_COMMIT_REF_SLUG}
      --tag ${CI_REGISTRY_IMAGE}/nodejs-${NODEJS_SELECTOR}:${CI_COMMIT_REF_SLUG}-minimal
      --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/nodejs-${NODEJS_SELECTOR}-minimal-cache:${CI_COMMIT_REF_SLUG}
      --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/nodejs-${NODEJS_SELECTOR}-minimal-cache:${CI_COMMIT_REF_SLUG},mode=max
  needs:
    - job: core/build

.nodejs_full:
  resource_group: nodejs-${NODEJS_SELECTOR}-full
  variables:
    DOCKER_EXTRA_ARGS: |
      nodejs/full
      --file nodejs/full/Dockerfile
      --build-arg PARENT_TAG=${CI_COMMIT_REF_SLUG}
      --build-arg NODEJS_SELECTOR=${NODEJS_SELECTOR}
      --tag ${CI_REGISTRY_IMAGE}/nodejs-${NODEJS_SELECTOR}:${CI_COMMIT_REF_SLUG}-full
      --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/nodejs-${NODEJS_SELECTOR}-full-cache:${CI_COMMIT_REF_SLUG}
      --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/nodejs-${NODEJS_SELECTOR}-full-cache:${CI_COMMIT_REF_SLUG},mode=max

.python:
  resource_group: python-${PYTHON_SELECTOR}
  variables:
    DOCKER_EXTRA_ARGS: |
      python
      --file python/Dockerfile
      --build-arg PARENT_TAG=${CI_COMMIT_REF_SLUG}
      --build-arg PYTHON_SELECTOR=${PYTHON_SELECTOR}
      --tag ${CI_REGISTRY_IMAGE}/python-${PYTHON_SELECTOR}:${CI_COMMIT_REF_SLUG}
      --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/python-${PYTHON_SELECTOR}-cache:${CI_COMMIT_REF_SLUG}
      --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/python-${PYTHON_SELECTOR}-cache:${CI_COMMIT_REF_SLUG},mode=max
