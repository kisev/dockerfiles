---
include:
  - local: .gitlab-ci.templates.yml

stages:
  - lint
  - build-1
  - build-2
  - build-3

default:
  interruptible: true

github-superliner/lint:
  stage: lint
  image:
    name: github/super-linter:slim-v4
    entrypoint: [ "" ]
  variables:
    RUN_LOCAL: "true"
    VALIDATE_NATURAL_LANGUAGE: "false"
    IGNORE_GITIGNORED_FILES: "true"
    DEFAULT_WORKSPACE: ${CI_PROJECT_DIR}
    ANSIBLE_DIRECTORY: ${CI_PROJECT_DIR}
    LINTER_RULES_PATH: ${CI_PROJECT_DIR}
  script:
    - /action/lib/linter.sh
  artifacts:
    untracked: true

core/build:
  stage: build-1
  extends:
    - .docker
  resource_group: core
  variables:
    DOCKER_EXTRA_ARGS: |
      core
      --file core/Dockerfile
      --build-arg PARENT_TAG=${CI_COMMIT_REF_SLUG}
      --tag ${CI_REGISTRY_IMAGE}/core:${CI_COMMIT_REF_SLUG}
      --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/core-cache:${CI_COMMIT_REF_SLUG}
      --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/core-cache:${CI_COMMIT_REF_SLUG},mode=max

nginx/build:
  stage: build-2
  extends:
    - .docker
  resource_group: nginx
  variables:
    DOCKER_EXTRA_ARGS: |
      nginx
      --file nginx/Dockerfile
      --build-arg PARENT_TAG=${CI_COMMIT_REF_SLUG}
      --tag ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_REF_SLUG}
      --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/nginx-cache:${CI_COMMIT_REF_SLUG}
      --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/nginx-cache:${CI_COMMIT_REF_SLUG},mode=max
  needs:
    - job: core/build

terratools/build:
  stage: build-2
  extends:
    - .docker
  resource_group: terratools
  variables:
    DOCKER_EXTRA_ARGS: |
      terratools
      --file terratools/Dockerfile
      --build-arg PARENT_TAG=${CI_COMMIT_REF_SLUG}
      --tag ${CI_REGISTRY_IMAGE}/terratools:${CI_COMMIT_REF_SLUG}
      --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/terratools-cache:${CI_COMMIT_REF_SLUG}
      --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/terratools-cache:${CI_COMMIT_REF_SLUG},mode=max
  needs:
    - job: core/build

kubetools/build:
  stage: build-2
  extends:
    - .docker
  resource_group: kubetools
  variables:
    DOCKER_EXTRA_ARGS: |
      kubetools
      --file kubetools/Dockerfile
      --build-arg PARENT_TAG=${CI_COMMIT_REF_SLUG}
      --tag ${CI_REGISTRY_IMAGE}/kubetools:${CI_COMMIT_REF_SLUG}
      --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/kubetools-cache:${CI_COMMIT_REF_SLUG}
      --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/kubetools-cache:${CI_COMMIT_REF_SLUG},mode=max
  needs:
    - job: core/build

python-3.8/build:
  stage: build-2
  extends:
    - .docker
    - .python
  resource_group: python-3.8
  variables:
    PYTHON_SELECTOR: "3.8"

python-3.9/build:
  stage: build-2
  extends:
    - .docker
    - .python
  resource_group: python-3.9
  variables:
    PYTHON_SELECTOR: "3.9"

python-3.10/build:
  stage: build-2
  extends:
    - .docker
    - .python
  resource_group: python-3.10
  variables:
    PYTHON_SELECTOR: "3.10"

golang-1.17/build:
  stage: build-2
  extends:
    - .docker
    - .golang
  resource_group: golang-1.17
  variables:
    GOLANG_SELECTOR: "1.17"

golang-1.18/build:
  stage: build-2
  extends:
    - .docker
    - .golang
  resource_group: golang-1.18
  variables:
    GOLANG_SELECTOR: "1.18"

nodejs-14/build:
  stage: build-2
  extends:
    - .docker
    - .nodejs
  resource_group: nodejs-14
  variables:
    NODEJS_SELECTOR: "14"

nodejs-16/build:
  stage: build-2
  extends:
    - .docker
    - .nodejs
  resource_group: nodejs-16
  variables:
    NODEJS_SELECTOR: "16"

nodejs-18/build:
  stage: build-2
  extends:
    - .docker
    - .nodejs
  resource_group: nodejs-18
  variables:
    NODEJS_SELECTOR: "18"

ansible-core-2.11/build:
  stage: build-3
  extends:
    - .docker
    - .ansible
  resource_group: ansible-core-2.11
  variables:
    ANSIBLE_SELECTOR: "core-2.11"

ansible-core-2.12/build:
  stage: build-3
  extends:
    - .docker
    - .ansible
  resource_group: ansible-core-2.12
  variables:
    ANSIBLE_SELECTOR: "core-2.12"

ansible-core-2.13/build:
  stage: build-3
  extends:
    - .docker
    - .ansible
  resource_group: ansible-core-2.13
  variables:
    ANSIBLE_SELECTOR: "core-2.13"

ansible-5/build:
  stage: build-3
  extends:
    - .docker
    - .ansible
  resource_group: ansible-5
  variables:
    ANSIBLE_SELECTOR: "5"

ansible-6/build:
  stage: build-3
  extends:
    - .docker
    - .ansible
  resource_group: ansible-6
  variables:
    ANSIBLE_SELECTOR: "6"
